<div class="penta-modal" id="gallery-modal">
 {% render 'penta-close-modal-button' %}
  <div class="penta-modal-content">
    <div class="swiper penta-swiper" id="penta-gallery-swiper">
      <div class="swiper-wrapper">
        {% if template.name == 'product' %}
          {%- for media in product.media -%}
              <div class="swiper-slide">
                  {%- if media != blank -%}
                      <img data-src="{{ media | image_url: width: 2000 }}"
                            width=""
                            height=""
                            class="swiper-lazy">
                      <div class="swiper-lazy-preloader swiper-lazy-preloader-white"></div>
                  {%- endif -%}
              </div>
          {%- endfor -%}
        {% endif %}
      </div>
      <div class="swiper-button-next">.</div>
      <div class="swiper-button-prev">.</div>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {

    window.onload = () => {
      // On new car pages - gets background images from gallery and injects into DOM
      // Replace with mutation observer later
      setTimeout(()=> {
        if('{{ template.name }}' == 'collection'){
          if(document.querySelector('#penta-pagefly-gallery')){
            const galleryImages = document.querySelectorAll('.penta-pagefly-gallery-image')
            const swiperContainer = document.querySelector('.swiper-wrapper')
            const sources = Array.from(galleryImages, image => {
              let style = image.currentStyle || window.getComputedStyle(image, false),
              imageUrl = style.backgroundImage.replace(/url\((['"])?(.*?)\1\)/gi, '$2').split(',')[0];
              return imageUrl;
            });
            const html = sources.map((source) => {
              let slide = `<div class="swiper-slide">
                <img data-src="${source}"
                      width=""
                      height=""
                      class="swiper-lazy">
                <div class="swiper-lazy-preloader swiper-lazy-preloader-white"></div>
              </div>`
              return slide
            })
            swiperContainer.insertAdjacentHTML('afterbegin', html);
            productSwiper.update();
          }
        }
      }, 1000)
    }

    var productSwiper = new Swiper("#penta-gallery-swiper", {
      preloadImages: false,
      lazy: {
        loadPrevNext: true,
      },
      spaceBetween: 10,
      navigation: {
        nextEl: ".swiper-button-next",
        prevEl: ".swiper-button-prev"
      },
      pagination: {
      el: ".swiper-pagination",
        clickable: true
      }
    });
  });
  
</script>

<style>
  #gallery-modal{
    display:flex;
    align-items:center;
    justify-content:center;
    pointer-events:all;
    background-color:rgba(0,0,0,0.75)
  }
  #gallery-modal .penta-modal-content{
    width: 100%;
    height: 100%;
  }

  #gallery-modal #penta-gallery-swiper{
    height: 100%;
  }
  #gallery-modal .swiper-wrapper{
    align-items:center;
  }
.swiper-lazy-preloader:empty{
  display:block;
}
  #gallery-modal .penta-close-modal-button{
    position:absolute;
    top:16px;
    right:16px;
    background:white;
    z-index:2;
    cursor:pointer;
  }
</style>